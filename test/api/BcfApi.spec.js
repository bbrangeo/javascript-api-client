/**
 * BIMData API
 * BIMData API documentation
 *
 * OpenAPI spec version: v1
 * Contact: contact@bimdata.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.bimdata);
  }
}(this, function(expect, bimdata) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new bimdata.BcfApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BcfApi', function() {
    describe('bcf21CurrentUserList', function() {
      it('should call bcf21CurrentUserList successfully', function(done) {
        //uncomment below and update the code to test bcf21CurrentUserList
        //instance.bcf21CurrentUserList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsCommentsEventsDelete', function() {
      it('should call bcf21ProjectsTopicsCommentsEventsDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsCommentsEventsDelete
        //instance.bcf21ProjectsTopicsCommentsEventsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsCommentsEventsDelete_0', function() {
      it('should call bcf21ProjectsTopicsCommentsEventsDelete_0 successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsCommentsEventsDelete_0
        //instance.bcf21ProjectsTopicsCommentsEventsDelete_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsEventsDelete', function() {
      it('should call bcf21ProjectsTopicsEventsDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsEventsDelete
        //instance.bcf21ProjectsTopicsEventsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsViewpointsBitmapDelete', function() {
      it('should call bcf21ProjectsTopicsViewpointsBitmapDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsViewpointsBitmapDelete
        //instance.bcf21ProjectsTopicsViewpointsBitmapDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsViewpointsColoringDelete', function() {
      it('should call bcf21ProjectsTopicsViewpointsColoringDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsViewpointsColoringDelete
        //instance.bcf21ProjectsTopicsViewpointsColoringDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsViewpointsDelete', function() {
      it('should call bcf21ProjectsTopicsViewpointsDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsViewpointsDelete
        //instance.bcf21ProjectsTopicsViewpointsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsViewpointsSelectionDelete', function() {
      it('should call bcf21ProjectsTopicsViewpointsSelectionDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsViewpointsSelectionDelete
        //instance.bcf21ProjectsTopicsViewpointsSelectionDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('bcf21ProjectsTopicsViewpointsVisibilityDelete', function() {
      it('should call bcf21ProjectsTopicsViewpointsVisibilityDelete successfully', function(done) {
        //uncomment below and update the code to test bcf21ProjectsTopicsViewpointsVisibilityDelete
        //instance.bcf21ProjectsTopicsViewpointsVisibilityDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBcfDocument', function() {
      it('should call createBcfDocument successfully', function(done) {
        //uncomment below and update the code to test createBcfDocument
        //instance.createBcfDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBcfProject', function() {
      it('should call createBcfProject successfully', function(done) {
        //uncomment below and update the code to test createBcfProject
        //instance.createBcfProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createBitmap', function() {
      it('should call createBitmap successfully', function(done) {
        //uncomment below and update the code to test createBitmap
        //instance.createBitmap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createColoring', function() {
      it('should call createColoring successfully', function(done) {
        //uncomment below and update the code to test createColoring
        //instance.createColoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createComment', function() {
      it('should call createComment successfully', function(done) {
        //uncomment below and update the code to test createComment
        //instance.createComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCommentEvent', function() {
      it('should call createCommentEvent successfully', function(done) {
        //uncomment below and update the code to test createCommentEvent
        //instance.createCommentEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCommentEvent_0', function() {
      it('should call createCommentEvent_0 successfully', function(done) {
        //uncomment below and update the code to test createCommentEvent_0
        //instance.createCommentEvent_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createDocumentReference', function() {
      it('should call createDocumentReference successfully', function(done) {
        //uncomment below and update the code to test createDocumentReference
        //instance.createDocumentReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createFile', function() {
      it('should call createFile successfully', function(done) {
        //uncomment below and update the code to test createFile
        //instance.createFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createRelatedTopic', function() {
      it('should call createRelatedTopic successfully', function(done) {
        //uncomment below and update the code to test createRelatedTopic
        //instance.createRelatedTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSelection', function() {
      it('should call createSelection successfully', function(done) {
        //uncomment below and update the code to test createSelection
        //instance.createSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSnippet', function() {
      it('should call createSnippet successfully', function(done) {
        //uncomment below and update the code to test createSnippet
        //instance.createSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTopic', function() {
      it('should call createTopic successfully', function(done) {
        //uncomment below and update the code to test createTopic
        //instance.createTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createTopicEvent', function() {
      it('should call createTopicEvent successfully', function(done) {
        //uncomment below and update the code to test createTopicEvent
        //instance.createTopicEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createViewpoint', function() {
      it('should call createViewpoint successfully', function(done) {
        //uncomment below and update the code to test createViewpoint
        //instance.createViewpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVisibility', function() {
      it('should call createVisibility successfully', function(done) {
        //uncomment below and update the code to test createVisibility
        //instance.createVisibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBcfDocument', function() {
      it('should call deleteBcfDocument successfully', function(done) {
        //uncomment below and update the code to test deleteBcfDocument
        //instance.deleteBcfDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteBcfProject', function() {
      it('should call deleteBcfProject successfully', function(done) {
        //uncomment below and update the code to test deleteBcfProject
        //instance.deleteBcfProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteComment', function() {
      it('should call deleteComment successfully', function(done) {
        //uncomment below and update the code to test deleteComment
        //instance.deleteComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteDocumentReference', function() {
      it('should call deleteDocumentReference successfully', function(done) {
        //uncomment below and update the code to test deleteDocumentReference
        //instance.deleteDocumentReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteFile', function() {
      it('should call deleteFile successfully', function(done) {
        //uncomment below and update the code to test deleteFile
        //instance.deleteFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteRelatedTopic', function() {
      it('should call deleteRelatedTopic successfully', function(done) {
        //uncomment below and update the code to test deleteRelatedTopic
        //instance.deleteRelatedTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSnippet', function() {
      it('should call deleteSnippet successfully', function(done) {
        //uncomment below and update the code to test deleteSnippet
        //instance.deleteSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteTopic', function() {
      it('should call deleteTopic successfully', function(done) {
        //uncomment below and update the code to test deleteTopic
        //instance.deleteTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateBcfDocument', function() {
      it('should call fullUpdateBcfDocument successfully', function(done) {
        //uncomment below and update the code to test fullUpdateBcfDocument
        //instance.fullUpdateBcfDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateBcfProject', function() {
      it('should call fullUpdateBcfProject successfully', function(done) {
        //uncomment below and update the code to test fullUpdateBcfProject
        //instance.fullUpdateBcfProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateBitmap', function() {
      it('should call fullUpdateBitmap successfully', function(done) {
        //uncomment below and update the code to test fullUpdateBitmap
        //instance.fullUpdateBitmap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateColoring', function() {
      it('should call fullUpdateColoring successfully', function(done) {
        //uncomment below and update the code to test fullUpdateColoring
        //instance.fullUpdateColoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateComment', function() {
      it('should call fullUpdateComment successfully', function(done) {
        //uncomment below and update the code to test fullUpdateComment
        //instance.fullUpdateComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateCommentEvent', function() {
      it('should call fullUpdateCommentEvent successfully', function(done) {
        //uncomment below and update the code to test fullUpdateCommentEvent
        //instance.fullUpdateCommentEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateCommentEvent_0', function() {
      it('should call fullUpdateCommentEvent_0 successfully', function(done) {
        //uncomment below and update the code to test fullUpdateCommentEvent_0
        //instance.fullUpdateCommentEvent_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateDocumentReference', function() {
      it('should call fullUpdateDocumentReference successfully', function(done) {
        //uncomment below and update the code to test fullUpdateDocumentReference
        //instance.fullUpdateDocumentReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateFile', function() {
      it('should call fullUpdateFile successfully', function(done) {
        //uncomment below and update the code to test fullUpdateFile
        //instance.fullUpdateFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateRelatedTopic', function() {
      it('should call fullUpdateRelatedTopic successfully', function(done) {
        //uncomment below and update the code to test fullUpdateRelatedTopic
        //instance.fullUpdateRelatedTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateSelection', function() {
      it('should call fullUpdateSelection successfully', function(done) {
        //uncomment below and update the code to test fullUpdateSelection
        //instance.fullUpdateSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateSnippet', function() {
      it('should call fullUpdateSnippet successfully', function(done) {
        //uncomment below and update the code to test fullUpdateSnippet
        //instance.fullUpdateSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateTopic', function() {
      it('should call fullUpdateTopic successfully', function(done) {
        //uncomment below and update the code to test fullUpdateTopic
        //instance.fullUpdateTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateTopicEvent', function() {
      it('should call fullUpdateTopicEvent successfully', function(done) {
        //uncomment below and update the code to test fullUpdateTopicEvent
        //instance.fullUpdateTopicEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateViewpoint', function() {
      it('should call fullUpdateViewpoint successfully', function(done) {
        //uncomment below and update the code to test fullUpdateViewpoint
        //instance.fullUpdateViewpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('fullUpdateVisibility', function() {
      it('should call fullUpdateVisibility successfully', function(done) {
        //uncomment below and update the code to test fullUpdateVisibility
        //instance.fullUpdateVisibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllCommentsEvents', function() {
      it('should call getAllCommentsEvents successfully', function(done) {
        //uncomment below and update the code to test getAllCommentsEvents
        //instance.getAllCommentsEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllTopicsEvents', function() {
      it('should call getAllTopicsEvents successfully', function(done) {
        //uncomment below and update the code to test getAllTopicsEvents
        //instance.getAllTopicsEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBcfDocument', function() {
      it('should call getBcfDocument successfully', function(done) {
        //uncomment below and update the code to test getBcfDocument
        //instance.getBcfDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBcfDocuments', function() {
      it('should call getBcfDocuments successfully', function(done) {
        //uncomment below and update the code to test getBcfDocuments
        //instance.getBcfDocuments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBcfProject', function() {
      it('should call getBcfProject successfully', function(done) {
        //uncomment below and update the code to test getBcfProject
        //instance.getBcfProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBcfProjects', function() {
      it('should call getBcfProjects successfully', function(done) {
        //uncomment below and update the code to test getBcfProjects
        //instance.getBcfProjects(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBitmap', function() {
      it('should call getBitmap successfully', function(done) {
        //uncomment below and update the code to test getBitmap
        //instance.getBitmap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getBitmaps', function() {
      it('should call getBitmaps successfully', function(done) {
        //uncomment below and update the code to test getBitmaps
        //instance.getBitmaps(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getColoring', function() {
      it('should call getColoring successfully', function(done) {
        //uncomment below and update the code to test getColoring
        //instance.getColoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getColorings', function() {
      it('should call getColorings successfully', function(done) {
        //uncomment below and update the code to test getColorings
        //instance.getColorings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getComment', function() {
      it('should call getComment successfully', function(done) {
        //uncomment below and update the code to test getComment
        //instance.getComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommentEvent', function() {
      it('should call getCommentEvent successfully', function(done) {
        //uncomment below and update the code to test getCommentEvent
        //instance.getCommentEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommentEvent_0', function() {
      it('should call getCommentEvent_0 successfully', function(done) {
        //uncomment below and update the code to test getCommentEvent_0
        //instance.getCommentEvent_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommentEvents', function() {
      it('should call getCommentEvents successfully', function(done) {
        //uncomment below and update the code to test getCommentEvents
        //instance.getCommentEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCommentEvents_0', function() {
      it('should call getCommentEvents_0 successfully', function(done) {
        //uncomment below and update the code to test getCommentEvents_0
        //instance.getCommentEvents_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getComments', function() {
      it('should call getComments successfully', function(done) {
        //uncomment below and update the code to test getComments
        //instance.getComments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentReference', function() {
      it('should call getDocumentReference successfully', function(done) {
        //uncomment below and update the code to test getDocumentReference
        //instance.getDocumentReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDocumentReferences', function() {
      it('should call getDocumentReferences successfully', function(done) {
        //uncomment below and update the code to test getDocumentReferences
        //instance.getDocumentReferences(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getExtensions', function() {
      it('should call getExtensions successfully', function(done) {
        //uncomment below and update the code to test getExtensions
        //instance.getExtensions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFile', function() {
      it('should call getFile successfully', function(done) {
        //uncomment below and update the code to test getFile
        //instance.getFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFiles', function() {
      it('should call getFiles successfully', function(done) {
        //uncomment below and update the code to test getFiles
        //instance.getFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRelatedTopic', function() {
      it('should call getRelatedTopic successfully', function(done) {
        //uncomment below and update the code to test getRelatedTopic
        //instance.getRelatedTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRelatedTopics', function() {
      it('should call getRelatedTopics successfully', function(done) {
        //uncomment below and update the code to test getRelatedTopics
        //instance.getRelatedTopics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSelection', function() {
      it('should call getSelection successfully', function(done) {
        //uncomment below and update the code to test getSelection
        //instance.getSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSelections', function() {
      it('should call getSelections successfully', function(done) {
        //uncomment below and update the code to test getSelections
        //instance.getSelections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnapshots', function() {
      it('should call getSnapshots successfully', function(done) {
        //uncomment below and update the code to test getSnapshots
        //instance.getSnapshots(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnippet', function() {
      it('should call getSnippet successfully', function(done) {
        //uncomment below and update the code to test getSnippet
        //instance.getSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnippets', function() {
      it('should call getSnippets successfully', function(done) {
        //uncomment below and update the code to test getSnippets
        //instance.getSnippets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopic', function() {
      it('should call getTopic successfully', function(done) {
        //uncomment below and update the code to test getTopic
        //instance.getTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopicEvent', function() {
      it('should call getTopicEvent successfully', function(done) {
        //uncomment below and update the code to test getTopicEvent
        //instance.getTopicEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopicEvents', function() {
      it('should call getTopicEvents successfully', function(done) {
        //uncomment below and update the code to test getTopicEvents
        //instance.getTopicEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTopics', function() {
      it('should call getTopics successfully', function(done) {
        //uncomment below and update the code to test getTopics
        //instance.getTopics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getViewpoint', function() {
      it('should call getViewpoint successfully', function(done) {
        //uncomment below and update the code to test getViewpoint
        //instance.getViewpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getViewpoints', function() {
      it('should call getViewpoints successfully', function(done) {
        //uncomment below and update the code to test getViewpoints
        //instance.getViewpoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVisibilities', function() {
      it('should call getVisibilities successfully', function(done) {
        //uncomment below and update the code to test getVisibilities
        //instance.getVisibilities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getVisibility', function() {
      it('should call getVisibility successfully', function(done) {
        //uncomment below and update the code to test getVisibility
        //instance.getVisibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBcfDocument', function() {
      it('should call updateBcfDocument successfully', function(done) {
        //uncomment below and update the code to test updateBcfDocument
        //instance.updateBcfDocument(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBcfProject', function() {
      it('should call updateBcfProject successfully', function(done) {
        //uncomment below and update the code to test updateBcfProject
        //instance.updateBcfProject(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateBitmap', function() {
      it('should call updateBitmap successfully', function(done) {
        //uncomment below and update the code to test updateBitmap
        //instance.updateBitmap(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateColoring', function() {
      it('should call updateColoring successfully', function(done) {
        //uncomment below and update the code to test updateColoring
        //instance.updateColoring(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateComment', function() {
      it('should call updateComment successfully', function(done) {
        //uncomment below and update the code to test updateComment
        //instance.updateComment(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCommentEvent', function() {
      it('should call updateCommentEvent successfully', function(done) {
        //uncomment below and update the code to test updateCommentEvent
        //instance.updateCommentEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCommentEvent_0', function() {
      it('should call updateCommentEvent_0 successfully', function(done) {
        //uncomment below and update the code to test updateCommentEvent_0
        //instance.updateCommentEvent_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateDocumentReference', function() {
      it('should call updateDocumentReference successfully', function(done) {
        //uncomment below and update the code to test updateDocumentReference
        //instance.updateDocumentReference(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateFile', function() {
      it('should call updateFile successfully', function(done) {
        //uncomment below and update the code to test updateFile
        //instance.updateFile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateRelatedTopic', function() {
      it('should call updateRelatedTopic successfully', function(done) {
        //uncomment below and update the code to test updateRelatedTopic
        //instance.updateRelatedTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSelection', function() {
      it('should call updateSelection successfully', function(done) {
        //uncomment below and update the code to test updateSelection
        //instance.updateSelection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSnippet', function() {
      it('should call updateSnippet successfully', function(done) {
        //uncomment below and update the code to test updateSnippet
        //instance.updateSnippet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTopic', function() {
      it('should call updateTopic successfully', function(done) {
        //uncomment below and update the code to test updateTopic
        //instance.updateTopic(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateTopicEvent', function() {
      it('should call updateTopicEvent successfully', function(done) {
        //uncomment below and update the code to test updateTopicEvent
        //instance.updateTopicEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateViewpoint', function() {
      it('should call updateViewpoint successfully', function(done) {
        //uncomment below and update the code to test updateViewpoint
        //instance.updateViewpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVisibility', function() {
      it('should call updateVisibility successfully', function(done) {
        //uncomment below and update the code to test updateVisibility
        //instance.updateVisibility(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
