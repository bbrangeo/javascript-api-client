version: 2

references:
  container_config: &container_config
    docker:
      - image: circleci/node:10
    working_directory: ~/repo

  restore_repo: &restore_repo
    restore_cache:
      keys:
        - v1-repo-{{ .Branch }}-{{ .Revision }}
        - v1-repo-{{ .Branch }}
        - v1-repo

  restore_modules: &restore_modules
    restore_cache:
      keys:
        - v1-dependencies-{{ checksum "package.json" }}
        - v1-dependencies
jobs:
  checkout_code:
    <<: *container_config
    steps:
      - *restore_repo
      - checkout
      - save_cache:
          key: v1-repo-{{ .Branch }}-{{ .Revision }}
          paths:
            - .
  test:
    <<: *container_config

    steps:
      - *restore_repo
      - *restore_modules

      - run:
          name: install dependencies
          command: |
            npm install
            npm install semantic-release

      - save_cache:
          paths:
            - ./node_modules
          key: - v1-dependencies-{{ checksum "package.json" }}

      - run: npm test

  release:
    <<: *container_config
    steps:
      - *restore_repo
      - *restore_modules
      - run:
        environment:
          GIT_COMMIT_DESC: git log --format=oneline -n 1 $CIRCLE_SHA1
        command: |
          . venv/bin/activate
          if [[ $GIT_COMMIT_DESC == \[PATCH\]* ]];
          then
            npx semantic-release publish --patch
          elif [[ $GIT_COMMIT_DESC == \[MINOR\]* ]];
          then
            npx semantic-release publish --minor
          elif [[ $GIT_COMMIT_DESC == \[MAJOR\]* ]];
          then
            npx semantic-release publish --major
          fi

workflows:
  version: 2
  test_and_release:
    jobs:
      - checkout_code
      - test:
          requires:
            - checkout_code
      - release:
          requires:
            - checkout_code
            - test
          filters:
            branches:
              only:
                - master
